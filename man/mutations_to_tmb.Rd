% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/total_to_tmb.R
\name{mutations_to_tmb}
\alias{mutations_to_tmb}
\title{Normalise mutations to TMB}
\usage{
mutations_to_tmb(
  total_mutations,
  callable_bases,
  mutations_per = c("megabase", "kilobase", "gigabase")
)
}
\arguments{
\item{total_mutations}{number of mutations (count).
If comparing samples where depth of sequencing across callable regions could vary
(e.g. comparing panels, exomes, or whole-genome data against each other) we highly recommend using only the number of \strong{clonal} mutations.
This is because detection of subclonal mutation counts is extremely depth-dependent.
Do note, however, that considering only clonal mutations would make it harder to detect samples with MMRd subclones, so its may be worth tolerating the bias.}

\item{callable_bases}{number of callable bases. See \code{\link[=typical_callable_bases]{typical_callable_bases()}} for example values.}

\item{mutations_per}{specify the unit. By default will return mutations per megabase.}
}
\value{
The TMB (mutations per megabase) normalised based on \code{callable_bases}
}
\description{
Transform the total number of mutations in a sample to \strong{Total Mutation Burden} (TMB; measured as mutations per megabase)
based on the number of theoretically 'callable bases' where a mutation could be detected based on your sequencing strategy.
E.g if you sequenced on a panel, callable bases would be the total size covered by the panel.
If you did whole-genome, its the number of bases in the whole genome you could theoretically identify a mutation at.
It is best-practice to identify the exact number of \strong{callable_bases}
based on your sequencing strategy, bioinformatics pipeline and breadth & depth of coverage (extracted from sample BAMs),
however we do provide sensible defaults for common sequencing strategies. See \code{\link[=typical_callable_bases]{typical_callable_bases()}} for details.
}
\examples{
tmb <- mutations_to_tmb(total_mutations = 500, callable_bases = 2.9*10^9)

}
